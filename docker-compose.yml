version: "3.9"

services:
  web:
    build: 
      context: ./server/mars_ilon
      dockerfile: Dockerfile
    container_name: mars_ilon_web
    command: >
      sh -c "./wait-for-it.sh db:5432 --
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             echo \"from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@spacex.com', 'admin123') if not User.objects.filter(username='admin').exists() else print('Superuser already exists')\" | python manage.py shell &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./server/mars_ilon:/app
      - ./server/mars_ilon/staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - ./server/mars_ilon/.env
    environment:
      - DEBUG=False
      - DJANGO_ALLOWED_HOSTS=193.32.188.225,localhost,127.0.0.1,web
      - DJANGO_CSRF_TRUSTED_ORIGINS=http://193.32.188.225,http://193.32.188.225:8000,http://193.32.188.225:3000
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:18
    container_name: mars_ilon_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mars_ilon}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  client:
    build:
      context: ./client-next
      dockerfile: Dockerfile
    container_name: next_client
    ports:
      - "3000:3000"
    env_file:
      - ./client-next/.env
    environment:
      - NEXT_PUBLIC_API_URL=http://web:8000/api
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume: